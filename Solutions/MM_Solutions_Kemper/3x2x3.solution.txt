#
#   3x2 * 2x3 Solution derived from 3x3 Laderman Solution
#
#             b11 b12 b13
#             b21 b22 b23
#  a11 a12    c11 c12 c13
#  a21 a22    c21 c22 c23
#  a31 a32    c31 c32 c33
#
P01 := (a11-a12+a21-a22-a32) *  (-b22);
P02 := (a11+a21) *  (b12+b22);
P03 := (a22) *  (b11-b12+b21-b22-b23);
P04 := (-a11-a21+a22) *  (-b11+b12+b22);
P05 := (-a21+a22) *  (-b11+b12);
P06 := (a11) *  (-b11);
P07 := (a11+a31+a32) *  (b11-b13+b23);
P08 := (a11+a31) *  (-b13+b23);
P09 := (a31+a32) *  (b11-b13);
P10 := (a11+a12-a22+a31+a32) *  (b23);
P11 := (a32) *  (-b11+b13+b21-b22-b23);
P12 := (a32) *  (b22);
P13 := (a22) *  (b23);
P14 := (a12) *  (b21);
P15 := (a21) *  (b13);
P16 := (a31) *  (b12);

C11 := -P06+P14;
C12 := P01-P04+P05-P06-P12;
C13 := -P06-P07+P09+P10+P13;
C21 := P02+P03+P04+P06+P13;
C22 := P02+P04-P05+P06;
C23 := P13+P15;
C31 := P06+P07-P08+P11+P12;
C32 := P12+P16;
C33 := P06+P07-P08-P09;

Simplify(C11 - (a11*b11+a12*b21));
Simplify(C12 - (a11*b12+a12*b22));
Simplify(C13 - (a11*b13+a12*b23));
Simplify(C21 - (a21*b11+a22*b21));
Simplify(C22 - (a21*b12+a22*b22));
Simplify(C23 - (a21*b13+a22*b23));
Simplify(C31 - (a31*b11+a32*b21));
Simplify(C32 - (a31*b12+a32*b22));
Simplify(C33 - (a31*b13+a32*b23));
