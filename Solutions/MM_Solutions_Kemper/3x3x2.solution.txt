#
#   3x3 * 3x2 Solution derived from 3x3 Laderman Solution
#
P01 := (a11-a12-a13+a21-a22-a32-a33) *  (-b22);
P02 := (a11+a21) *  (b12+b22);
P03 := (a22) *  (b11-b12+b21-b22+b31);
P04 := (-a11-a21+a22) *  (-b11+b12+b22);
P05 := (-a21+a22) *  (-b11+b12);
P06 := (a11) *  (-b11);
P07 := (a11+a31+a32) *  (b11);
P08 := (a32) *  (-b11+b21-b22-b31+b32);
P09 := (a13+a32+a33) *  (b22+b31-b32);
P10 := (a13+a33) *  (-b22+b32);
P11 := (a13) *  (b31);
P12 := (-a32-a33) *  (-b31+b32);
P13 := (a13+a22-a23) *  (-b31);
P14 := (a12) *  (b21);
P15 := (a23) *  (b32);
P16 := (a31) *  (b12);

c11 := -P06+P11+P14;
c12 := P01-P04+P05-P06-P09+P11+P12;
c21 := P02+P03+P04+P06+P11+P13;
c22 := P02+P04-P05+P06+P15;
c31 := P06+P07+P08+P09+P10-P11;
c32 := P09+P10-P11-P12+P16;

Simplify(c11 - (a11*b11+a12*b21+a13*b31));
Simplify(c12 - (a11*b12+a12*b22+a13*b32));
Simplify(c21 - (a21*b11+a22*b21+a23*b31));
Simplify(c22 - (a21*b12+a22*b22+a23*b32));
Simplify(c31 - (a31*b11+a32*b21+a33*b31));
Simplify(c32 - (a31*b12+a32*b22+a33*b32));
