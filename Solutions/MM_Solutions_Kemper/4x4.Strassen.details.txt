#
#  4x4 Strassen Solution
#

products := 0;

#
#  basic 2x2 Algorithm
#

# P1 := (a12 - a22) * (b21 + b22);
# p2 := (a11 + a22) * (b11 + b22);
# p3 := (a11 - a21) * (b11 + b12);
# p4 := (a11 + a12) * b22;
# p5 := a11 * (b12 - b22);
# p6 := a22 * (b21 - b11);
# p7 := (a21 + a22) * b11;
#
# c11 := p1 + p2 - p4 + p6;
# c12 := p4 + p5;
# c21 := p6 + p7;
# c22 := p2 - p3 + p5 - p7;

#
#  the basic algorithm is applied to 2*4 2x2 matrices
#

#
#   d11 d12 | e11 e12     i11 i12 | j11 j12
#   d21 d22 | e21 e22     121 i22 | j21 j22
#   --------+--------  *  --------+--------
#   f11 f12 | g11 g12     k11 k12 | m11 m12
#   f21 f22 | g21 g22     k21 k22 | m21 m22
#

a11 := {{d11,d12},{d21,d22}};
a12 := {{e11,e12},{e21,e22}};
a21 := {{f11,f12},{f21,f22}};
a22 := {{g11,g12},{g21,g22}};

b11 := {{i11,i12},{i21,i22}};
b12 := {{j11,j12},{j21,j22}};
b21 := {{k11,k12},{k21,k22}};
b22 := {{m11,m12},{m21,m22}};

A := a12 - a22;
B := b21 + b22;

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p01 := p1;
p02 := p2;
p03 := p3;
p04 := p4;
p05 := p5;
p06 := p6;
p07 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q1 := {{c11,c12},{c21,c22}};

A := (a11 + a22);
B := (b11 + b22);

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p08 := p1;
p09 := p2;
p10 := p3;
p11 := p4;
p12 := p5;
p13 := p6;
p14 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q2 := {{c11,c12},{c21,c22}};

A := (a11 - a21);
B := (b11 + b12);

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p15 := p1;
p16 := p2;
p17 := p3;
p18 := p4;
p19 := p5;
p20 := p6;
p21 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q3 := {{c11,c12},{c21,c22}};

A := a11 + a12;
B := b22;

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p22 := p1;
p23 := p2;
p24 := p3;
p25 := p4;
p26 := p5;
p27 := p6;
p28 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q4 := {{c11,c12},{c21,c22}};

A := a11;
B := b12 - b22;

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p29 := p1;
p30 := p2;
p31 := p3;
p32 := p4;
p33 := p5;
p34 := p6;
p35 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q5 := {{c11,c12},{c21,c22}};

A := a22;
B := b21 - b11;

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p36 := p1;
p37 := p2;
p38 := p3;
p39 := p4;
p40 := p5;
p41 := p6;
p42 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q6 := {{c11,c12},{c21,c22}};

A := a21 + a22;
B := b11;

p1 := (A[1][2] - A[2][2]) * (B[2][1] + B[2][2]);
p2 := (A[1][1] + A[2][2]) * (B[1][1] + B[2][2]);
p3 := (A[1][1] - A[2][1]) * (B[1][1] + B[1][2]);
p4 := (A[1][1] + A[1][2]) * B[2][2];
p5 := A[1][1] * (B[1][2] - B[2][2]);
p6 := A[2][2] * (B[2][1] - B[1][1]);
p7 := (A[2][1] + A[2][2]) * B[1][1];

p43 := p1;
p44 := p2;
p45 := p3;
p46 := p4;
p47 := p5;
p48 := p6;
p49 := p7;

products := products + 7;

c11 := p1 + p2 - p4 + p6;
c12 := p4 + p5;
c21 := p6 + p7;
c22 := p2 - p3 + p5 - p7;

Q7 := {{c11,c12},{c21,c22}};

c11 := Q1 + Q2 - Q4 + Q6;
c12 := Q4 + Q5;
c21 := Q6 + Q7;
c22 := Q2 - Q3 + Q5 - Q7;

C := {{c11[1][1],c11[1][2],c12[1][1],c12[1][2]},{c11[2][1],c11[2][2],c12[2][1],c12[2][2]},{c21[1][1],c21[1][2],c22[1][1],c22[1][2]},{c21[2][1],c21[2][2],c22[2][1],c22[2][2]}};
# A := {{a11[1][1],a11[1][2],a12[1][1],a12[1][2]},{a11[2][1],a11[2][2],a12[2][1],a12[2][2]},{a21[1][1],a21[1][2],a22[1][1],a22[1][2]},{a21[2][1],a21[2][2],a22[2][1],a22[2][2]}};
# B := {{b11[1][1],b11[1][2],b12[1][1],b12[1][2]},{b11[2][1],b11[2][2],b12[2][1],b12[2][2]},{b21[1][1],b21[1][2],b22[1][1],b22[1][2]},{b21[2][1],b21[2][2],b22[2][1],b22[2][2]}};

# R := A*B - C;

# Simplify(R);

products;

C[1][1];
C[1][2];
C[1][3];
C[1][4];
C[2][1];
C[2][2];
C[2][3];
C[2][4];
C[3][1];
C[3][2];
C[3][3];
C[3][4];
C[4][1];
C[4][2];
C[4][3];
C[4][4];



p01 := (e12-g12-(e22-g22))*(k21+m21+k22+m22);
p02 := (e11-g11+e22-g22)*(k11+m11+k22+m22);
p03 := (e11-g11-(e21-g21))*(k11+m11+k12+m12);
p04 := (e11-g11+e12-g12)*(k22+m22);
p05 := (e11-g11)*(k12+m12-(k22+m22));
p06 := (e22-g22)*(k21+m21-(k11+m11));
p07 := (e21-g21+e22-g22)*(k11+m11);
p08 := (d12+g12-(d22+g22))*(i21+m21+i22+m22);
p09 := (d11+g11+d22+g22)*(i11+m11+i22+m22);
p10 := (d11+g11-(d21+g21))*(i11+m11+i12+m12);
p11 := (d11+g11+d12+g12)*(i22+m22);
p12 := (d11+g11)*(i12+m12-(i22+m22));
p13 := (d22+g22)*(i21+m21-(i11+m11));
p14 := (d21+g21+d22+g22)*(i11+m11);
p15 := (d12-f12-(d22-f22))*(i21+j21+i22+j22);
p16 := (d11-f11+d22-f22)*(i11+j11+i22+j22);
p17 := (d11-f11-(d21-f21))*(i11+j11+i12+j12);
p18 := (d11-f11+d12-f12)*(i22+j22);
p19 := (d11-f11)*(i12+j12-(i22+j22));
p20 := (d22-f22)*(i21+j21-(i11+j11));
p21 := (d21-f21+d22-f22)*(i11+j11);
p22 := (d12+e12-(d22+e22))*(m21+m22);
p23 := (d11+e11+d22+e22)*(m11+m22);
p24 := (d11+e11-(d21+e21))*(m11+m12);
p25 := (d11+e11+d12+e12)*m22;
p26 := (d11+e11)*(m12-m22);
p27 := (d22+e22)*(m21-m11);
p28 := (d21+e21+d22+e22)*m11;
p29 := (d12-d22)*(j21-m21+j22-m22);
p30 := (d11+d22)*(j11-m11+j22-m22);
p31 := (d11-d21)*(j11-m11+j12-m12);
p32 := (d11+d12)*(j22-m22);
p33 := d11*(j12-m12-(j22-m22));
p34 := d22*(j21-m21-(j11-m11));
p35 := (d21+d22)*(j11-m11);
p36 := (g12-g22)*(k21-i21+k22-i22);
p37 := (g11+g22)*(k11-i11+k22-i22);
p38 := (g11-g21)*(k11-i11+k12-i12);
p39 := (g11+g12)*(k22-i22);
p40 := g11*(k12-i12-(k22-i22));
p41 := g22*(k21-i21-(k11-i11));
p42 := (g21+g22)*(k11-i11);
p43 := (f12+g12-(f22+g22))*(i21+i22);
p44 := (f11+g11+f22+g22)*(i11+i22);
p45 := (f11+g11-(f21+g21))*(i11+i12);
p46 := (f11+g11+f12+g12)*i22;
p47 := (f11+g11)*(i12-i22);
p48 := (f22+g22)*(i21-i11);
p49 := (f21+g21+f22+g22)*i11;

C[1][1] := p01+p02-p04+p06+p08+p09-p11+p13-p22-p23+p25-p27+p36+p37-p39+p41;
C[1][2] := p04+p05+p11+p12-p25-p26+p39+p40;
C[1][3] := p22+p23-p25+p27+p29+p30-p32+p34;
C[1][4] := p25+p26+p32+p33;
C[2][1] := p06+p07+p13+p14-p27-p28+p41+p42;
C[2][2] := p02-p03+p05-p07+p09-p10+p12-p14-p23+p24-p26+p28+p37-p38+p40-p42;
C[2][3] := p27+p28+p34+p35;
C[2][4] := p23-p24+p26-p28+p30-p31+p33-p35;
C[3][1] := p36+p37-p39+p41+p43+p44-p46+p48;
C[3][2] := p39+p40+p46+p47;
C[3][3] := p08+p09-p11+p13-p15-p16+p18-p20+p29+p30-p32+p34-p43-p44+p46-p48;
C[3][4] := p11+p12-p18-p19+p32+p33-p46-p47;
C[4][1] := p41+p42+p48+p49;
C[4][2] := p37-p38+p40-p42+p44-p45+p47-p49;
C[4][3] := p13+p14-p20-p21+p34+p35-p48-p49;
C[4][4] := p09-p10+p12-p14-p16+p17-p19+p21+p30-p31+p33-p35-p44+p45-p47+p49;


