#
#  Extraction of matrix multiplication script

#  A multiplication procedure with one row and one column less is derived by 
#  setting the row and colum elements to 0 and leaving out all 0 products.
#
#  Intermediate products: 294
#  Add/sub operations:    2989

#  Input file:  8x8.Strassen.txt
#  Output file: 7x7.Strassen.extracted.txt
#  A row cleared: 1
#  A col cleared: 2
#  B row cleared: 2
#  B col cleared: 4
#  Created:     28.12.2012 22:02

#  Verified ok!

#  294 intermediate products:
P01 := (a22+a33+a44+a55+a66+a77) * (b11+b23+b44+b55+b66+b77);
P02 := (a11+a32+a33+a54+a55+a76+a77) * (b11+b23+b44+b66);
P03 := (a22+a44+a66) * (b12+b45-b55+b67-b77);
P04 := (a33+a55+a77) * (-b11-b23+b33-b44+b54-b66+b76);
P05 := (a22+a23+a44+a45+a66+a67) * (b55+b77);
P06 := (a11-a22+a32-a44+a54-a66+a76) * (b11+b12+b23+b44+b45+b66+b67);
P07 := (a23-a33+a45-a55+a67-a77) * (b33+b54+b55+b76+b77);
P08 := (a21+a22+a33+a64+a66+a75+a77) * (b11+b44+b55);
P09 := (a31+a32+a33+a74+a75+a76+a77) * (b11+b44);
P10 := (a21+a22+a64+a66) * (b12+b45-b55);
P11 := (a33+a75+a77) * (-b11-b44+b54);
P12 := (a21+a22+a23+a64+a65+a66+a67) * b55;
P13 := (-a21-a22+a31+a32-a64-a66+a74+a76) * (b11+b12+b44+b45);
P14 := (a23-a33+a65+a67-a75-a77) * (b54+b55);
P15 := (a44+a55) * (b13-b23+b46+b57-b66-b77);
P16 := (a11+a54+a55) * (b13-b23+b46-b66);
P17 := a44 * (b47-b57-b67+b77);
P18 := a55 * (-b13+b23-b33-b46+b56+b66-b76);
P19 := (a44+a45) * (b57-b77);
P20 := (a11-a44+a54) * (b13-b23+b46+b47-b66-b67);
P21 := (-a45+a55) * (b33-b56-b57+b76+b77);
P22 := (a22+a33+a66+a77) * (-b11+b21+b32-b44-b55+b64+b75);
P23 := (a32+a33+a76+a77) * (-b11+b21-b44+b64);
P24 := (a22+a66) * (-b12+b22-b32-b45+b55+b65-b75);
P25 := (a33+a77) * (b11-b21+b31+b44-b54-b64+b74);
P26 := (a22+a23+a66+a67) * (b32-b55+b75);
P27 := (-a22+a32-a66+a76) * (-b11-b12+b21+b22-b44-b45+b64+b65);
P28 := (a23-a33+a67-a77) * (b31+b32-b54-b55+b74+b75);
P29 := (a13+a44+a46+a55+a57) * (b23+b66+b77);
P30 := (a11+a12+a13+a54+a55+a56+a57) * (b23+b66);
P31 := (a44+a46) * (b67-b77);
P32 := (a13+a55+a57) * (-b23+b33-b66+b76);
P33 := (a44+a45+a46+a47) * b77;
P34 := (a11+a12-a44-a46+a54+a56) * (b23+b66+b67);
P35 := (-a13+a45+a47-a55-a57) * (b33+b76+b77);
P36 := (a21-a44-a55+a64+a75) * (b11+b13+b44+b46+b55+b57);
P37 := (-a11+a31-a54-a55+a74+a75) * (b11+b13+b44+b46);
P38 := (a21-a44+a64) * (b12+b45+b47-b55-b57);
P39 := (a55-a75) * (b11+b13+b44+b46-b54-b56);
P40 := (a21-a44-a45+a64+a65) * (b55+b57);
P41 := (-a11-a21+a31+a44-a54-a64+a74) * (b11+b12+b13+b44+b45+b46+b47);
P42 := (-a45+a55+a65-a75) * (b54+b55+b56+b57);
P43 := (a13-a22-a33+a46+a57-a66-a77) * (b21+b23+b32+b64+b66+b75+b77);
P44 := (a12+a13-a32-a33+a56+a57-a76-a77) * (b21+b23+b64+b66);
P45 := (a22-a46+a66) * (-b22+b32-b65-b67+b75+b77);
P46 := (a13-a33+a57-a77) * (-b21-b23+b31+b33-b64-b66+b74+b76);
P47 := (-a22-a23+a46+a47-a66-a67) * (b32+b75+b77);
P48 := (a12+a22-a32-a46+a56+a66-a76) * (b21+b22+b23+b64+b65+b66+b67);
P49 := (-a13-a23+a33+a47-a57-a67+a77) * (b31+b32+b33+b74+b75+b76+b77);
P50 := (a41+a44+a55+a62+a66+a73+a77) * (b11+b23);
P51 := (a51+a54+a55+a72+a73+a76+a77) * (b11+b23);
P52 := (a41+a44+a62+a66) * b12;
P53 := (a55+a73+a77) * (-b11-b23+b33);
P54 := (-a41-a44+a51+a54-a62-a66+a72+a76) * (b11+b12+b23);
P55 := (a45-a55+a63+a67-a73-a77) * b33;
P56 := (a61+a62+a64+a66+a73+a75+a77) * b11;
P57 := (a71+a72+a73+a74+a75+a76+a77) * b11;
P58 := (a61+a62+a64+a66) * b12;
P59 := (a73+a75+a77) * (-b11);
P60 := (-a61-a62-a64-a66+a71+a72+a74+a76) * (b11+b12);
P61 := (a41+a44+a55) * (b13-b23);
P62 := (a51+a54+a55) * (b13-b23);
P63 := a55 * (-b13+b23-b33);
P64 := (-a41-a44+a51+a54) * (-b13+b23);
P65 := (-a45+a55) * b33;
P66 := (a62+a66+a73+a77) * (-b11+b21+b32);
P67 := (a72+a73+a76+a77) * (-b11+b21);
P68 := (a62+a66) * (-b12+b22-b32);
P69 := (a73+a77) * (b11-b21+b31);
P70 := (a62+a63+a66+a67) * b32;
P71 := (-a62-a66+a72+a76) * (-b11-b12+b21+b22);
P72 := (a63+a67-a73-a77) * (b31+b32);
P73 := (a41+a42+a44+a46+a53+a55+a57) * b23;
P74 := (a51+a52+a53+a54+a55+a56+a57) * b23;
P75 := (a53+a55+a57) * (-b23+b33);
P76 := (-a41-a42-a44-a46+a51+a52+a54+a56) * b23;
P77 := (a43+a45+a47-a53-a55-a57) * b33;
P78 := (-a41-a44-a55+a61+a64+a75) * (b11+b13);
P79 := (-a51-a54-a55+a71+a74+a75) * (b11+b13);
P80 := (a41+a44-a61-a64) * b12;
P81 := (a55-a75) * (b11+b13);
P82 := (-a41-a44+a51+a54+a61+a64-a71-a74) * (b11+b12+b13);
P83 := (a42+a46+a53+a57-a62-a66-a73-a77) * (b21+b23+b32);
P84 := (a52+a53+a56+a57-a72-a73-a76-a77) * (b21+b23);
P85 := (a42+a46-a62-a66) * (b22-b32);
P86 := (a53+a57-a73-a77) * (-b21-b23+b31+b33);
P87 := (a42+a43+a46+a47-a62-a63-a66-a67) * b32;
P88 := (-a42-a46+a52+a56+a62+a66-a72-a76) * (b21+b22+b23);
P89 := (a43+a47-a53-a57-a63-a67+a73+a77) * (b31+b32+b33);
P90 := (a22+a33) * (b14+b26+b37-b44-b55-b66-b77);
P91 := (a11+a32+a33) * (b14+b26-b44-b66);
P92 := a22 * (b15+b27-b37-b45+b55-b67+b77);
P93 := a33 * (-b14-b26+b36+b44-b54+b66-b76);
P94 := (a22+a23) * (b37-b55-b77);
P95 := (a11-a22+a32) * (b14+b15+b26+b27-b44-b45-b66-b67);
P96 := (-a23+a33) * (-b36-b37+b54+b55+b76+b77);
P97 := (a21+a22+a33) * (b14-b44-b55);
P98 := (a31+a32+a33) * (b14-b44);
P99 := (a21+a22) * (b15-b45+b55);
P100 := a33 * (-b14+b44-b54);
P101 := (a21+a22+a23) * (-b55);
P102 := (-a21-a22+a31+a32) * (b14+b15-b44-b45);
P103 := (-a23+a33) * (b54+b55);
P104 := a11 * (b16-b26-b46+b66);
P105 := a11 * (b16+b17-b26-b27-b46-b47+b66+b67);
P106 := (a22+a33) * (-b14+b24+b35+b44+b55-b64-b75);
P107 := (a32+a33) * (-b14+b24+b44-b64);
P108 := a22 * (-b15+b25-b35+b45-b55-b65+b75);
P109 := a33 * (b14-b24+b34-b44+b54+b64-b74);
P110 := (a22+a23) * (b35+b55-b75);
P111 := (-a22+a32) * (-b14-b15+b24+b25+b44+b45-b64-b65);
P112 := (a23-a33) * (b34+b35+b54+b55-b74-b75);
P113 := a13 * (b26+b37-b66-b77);
P114 := (a11+a12+a13) * (b26-b66);
P115 := a13 * (-b26+b36+b66-b76);
P116 := (a11+a12) * (b26+b27-b66-b67);
P117 := a13 * (-b36-b37+b76+b77);
P118 := (-a21) * (-b14-b16+b44+b46+b55+b57);
P119 := (-a11+a31) * (b14+b16-b44-b46);
P120 := a21 * (b15+b17-b45-b47+b55+b57);
P121 := (-a21) * (b55+b57);
P122 := (a11+a21-a31) * (-b14-b15-b16-b17+b44+b45+b46+b47);
P123 := (-a13+a22+a33) * (-b24-b26-b35-b37+b64+b66+b75+b77);
P124 := (a12+a13-a32-a33) * (b24+b26-b64-b66);
P125 := a22 * (-b25-b27+b35+b37+b65+b67-b75-b77);
P126 := (a13-a33) * (-b24-b26+b34+b36+b64+b66-b74-b76);
P127 := (a22+a23) * (-b35-b37+b75+b77);
P128 := (a12+a22-a32) * (b24+b25+b26+b27-b64-b65-b66-b67);
P129 := (a13+a23-a33) * (-b34-b35-b36-b37+b74+b75+b76+b77);
P130 := (a44+a55+a66+a77) * (-b11-b23+b41+b52+b63);
P131 := (a54+a55+a76+a77) * (-b11-b23+b41+b63);
P132 := (a44+a66) * (-b12+b42-b52);
P133 := (a55+a77) * (b11+b23-b33-b41+b51-b63+b73);
P134 := (a44+a45+a66+a67) * b52;
P135 := (-a44+a54-a66+a76) * (-b11-b12-b23+b41+b42+b63);
P136 := (a45-a55+a67-a77) * (-b33+b51+b52+b73);
P137 := (a64+a66+a75+a77) * (-b11+b41+b52);
P138 := (a74+a75+a76+a77) * (-b11+b41);
P139 := (a64+a66) * (-b12+b42-b52);
P140 := (a75+a77) * (b11-b41+b51);
P141 := (a64+a65+a66+a67) * b52;
P142 := (-a64-a66+a74+a76) * (-b11-b12+b41+b42);
P143 := (a65+a67-a75-a77) * (b51+b52);
P144 := (a44+a55) * (-b13+b23+b43-b63);
P145 := (a54+a55) * (-b13+b23+b43-b63);
P146 := a55 * (b13-b23+b33-b43+b53+b63-b73);
P147 := (a45-a55) * (b33+b53-b73);
P148 := (a66+a77) * (b11-b21-b32-b41-b52+b61+b72);
P149 := (a76+a77) * (b11-b21-b41+b61);
P150 := a66 * (b12-b22+b32-b42+b52+b62-b72);
P151 := a77 * (-b11+b21-b31+b41-b51-b61+b71);
P152 := (a66+a67) * (-b32-b52+b72);
P153 := (-a66+a76) * (b11+b12-b21-b22-b41-b42+b61+b62);
P154 := (-a67+a77) * (b31+b32+b51+b52-b71-b72);
P155 := (a44+a46+a55+a57) * (-b23+b63);
P156 := (a54+a55+a56+a57) * (-b23+b63);
P157 := (a55+a57) * (b23-b33-b63+b73);
P158 := (-a44-a46+a54+a56) * (b23-b63);
P159 := (a45+a47-a55-a57) * (-b33+b73);
P160 := (-a44-a55+a64+a75) * (-b11-b13+b41+b43+b52);
P161 := (-a54-a55+a74+a75) * (-b11-b13+b41+b43);
P162 := (-a55+a75) * (b11+b13-b41-b43+b51+b53);
P163 := (a44+a45-a64-a65) * b52;
P164 := (-a45+a55+a65-a75) * (b51+b52+b53);
P165 := (a46+a57-a66-a77) * (-b21-b23-b32+b61+b63+b72);
P166 := (a56+a57-a76-a77) * (-b21-b23+b61+b63);
P167 := (a46-a66) * (-b22+b32+b62-b72);
P168 := (a57-a77) * (b21+b23-b31-b33-b61-b63+b71+b73);
P169 := (a46+a47-a66-a67) * (-b32+b72);
P170 := (-a46+a56+a66-a76) * (-b21-b22-b23+b61+b62+b63);
P171 := (a47-a57-a67+a77) * (-b31-b32-b33+b71+b72+b73);
P172 := (a15+a22+a26+a33+a37) * (b44+b55+b66+b77);
P173 := (a11+a14+a15+a32+a33+a36+a37) * (b44+b66);
P174 := (a22+a26) * (b45-b55+b67-b77);
P175 := (a15+a33+a37) * (-b44+b54-b66+b76);
P176 := (a22+a23+a26+a27) * (b55+b77);
P177 := (a11+a14-a22-a26+a32+a36) * (b44+b45+b66+b67);
P178 := (-a15+a23+a27-a33-a37) * (b54+b55+b76+b77);
P179 := (a21+a22+a24+a26+a33+a35+a37) * (b44+b55);
P180 := (a31+a32+a33+a34+a35+a36+a37) * b44;
P181 := (a21+a22+a24+a26) * (b45-b55);
P182 := (a33+a35+a37) * (-b44+b54);
P183 := (a21+a22+a23+a24+a25+a26+a27) * b55;
P184 := (-a21-a22-a24-a26+a31+a32+a34+a36) * (b44+b45);
P185 := (a23+a25+a27-a33-a35-a37) * (b54+b55);
P186 := a15 * (b46+b57-b66-b77);
P187 := (a11+a14+a15) * (b46-b66);
P188 := a15 * (-b46+b56+b66-b76);
P189 := (a11+a14) * (b46+b47-b66-b67);
P190 := a15 * (-b56-b57+b76+b77);
P191 := (a22+a26+a33+a37) * (-b44-b55+b64+b75);
P192 := (a32+a33+a36+a37) * (-b44+b64);
P193 := (a22+a26) * (-b45+b55+b65-b75);
P194 := (a33+a37) * (b44-b54-b64+b74);
P195 := (a22+a23+a26+a27) * (-b55+b75);
P196 := (-a22-a26+a32+a36) * (-b44-b45+b64+b65);
P197 := (a23+a27-a33-a37) * (-b54-b55+b74+b75);
P198 := (a13+a15+a17) * (b66+b77);
P199 := (a11+a12+a13+a14+a15+a16+a17) * b66;
P200 := (a13+a15+a17) * (-b66+b76);
P201 := (a11+a12+a14+a16) * (b66+b67);
P202 := (-a15+a21+a24+a35) * (b44+b46+b55+b57);
P203 := (-a11-a14-a15+a31+a34+a35) * (b44+b46);
P204 := (a21+a24) * (b45+b47-b55-b57);
P205 := (-a15+a35) * (-b44-b46+b54+b56);
P206 := (a21+a24+a25) * (b55+b57);
P207 := (-a11-a14-a21-a24+a31+a34) * (b44+b45+b46+b47);
P208 := (a15+a25-a35) * (b54+b55+b56+b57);
P209 := (a13+a17-a22-a26-a33-a37) * (b64+b66+b75+b77);
P210 := (a12+a13+a16+a17-a32-a33-a36-a37) * (b64+b66);
P211 := (a22+a26) * (-b65-b67+b75+b77);
P212 := (a13+a17-a33-a37) * (-b64-b66+b74+b76);
P213 := (a12+a16+a22+a26-a32-a36) * (b64+b65+b66+b67);
P214 := (-a22-a33+a41+a62+a73) * (b11+b14+b23+b26+b37);
P215 := (-a11-a32-a33+a51+a72+a73) * (b11+b14+b23+b26);
P216 := (-a22+a41+a62) * (b12+b15+b27-b37);
P217 := (a33-a73) * (b11+b14+b23+b26-b33-b36);
P218 := (-a22-a23+a41+a62+a63) * b37;
P219 := (-a11+a22-a32-a41+a51-a62+a72) * (b11+b12+b14+b15+b23+b26+b27);
P220 := (-a23+a33+a63-a73) * (b33+b36+b37);
P221 := (-a21-a22-a33+a61+a62+a73) * (b11+b14);
P222 := (-a31-a32-a33+a71+a72+a73) * (b11+b14);
P223 := (-a21-a22+a61+a62) * (b12+b15);
P224 := (a33-a73) * (b11+b14);
P225 := (a21+a22-a31-a32-a61-a62+a71+a72) * (b11+b12+b14+b15);
P226 := a41 * (b13+b16-b23-b26-b37);
P227 := (-a11+a51) * (b13+b16-b23-b26);
P228 := a41 * (b17-b27+b37);
P229 := a41 * (-b37);
P230 := (a11+a41-a51) * (-b13-b16-b17+b23+b26+b27);
P231 := (-a22-a33+a62+a73) * (-b11-b14+b21+b24+b32+b35);
P232 := (-a32-a33+a72+a73) * (-b11-b14+b21+b24);
P233 := (a22-a62) * (b12+b15-b22-b25+b32+b35);
P234 := (-a33+a73) * (b11+b14-b21-b24+b31+b34);
P235 := (-a22-a23+a62+a63) * (b32+b35);
P236 := (a22-a32-a62+a72) * (-b11-b12-b14-b15+b21+b22+b24+b25);
P237 := (-a23+a33+a63-a73) * (b31+b32+b34+b35);
P238 := (-a13+a41+a42+a53) * (b23+b26+b37);
P239 := (-a11-a12-a13+a51+a52+a53) * (b23+b26);
P240 := (a41+a42) * (b27-b37);
P241 := (-a13+a53) * (-b23-b26+b33+b36);
P242 := (a41+a42+a43) * b37;
P243 := (-a11-a12-a41-a42+a51+a52) * (b23+b26+b27);
P244 := (a13+a43-a53) * (b33+b36+b37);
P245 := (-a21-a41+a61) * (b11+b13+b14+b16);
P246 := (a11-a31-a51+a71) * (b11+b13+b14+b16);
P247 := (-a21-a41+a61) * (b12+b15+b17);
P248 := (a11+a21-a31+a41-a51-a61+a71) * (b11+b12+b13+b14+b15+b16+b17);
P249 := (-a13+a22+a33+a42+a53-a62-a73) * (b21+b23+b24+b26+b32+b35+b37);
P250 := (-a12-a13+a32+a33+a52+a53-a72-a73) * (b21+b23+b24+b26);
P251 := (a22+a42-a62) * (b22+b25+b27-b32-b35-b37);
P252 := (-a13+a33+a53-a73) * (-b21-b23-b24-b26+b31+b33+b34+b36);
P253 := (a22+a23+a42+a43-a62-a63) * (b32+b35+b37);
P254 := (-a12-a22+a32-a42+a52+a62-a72) * (b21+b22+b23+b24+b25+b26+b27);
P255 := (a13+a23-a33+a43-a53-a63+a73) * (b31+b32+b33+b34+b35+b36+b37);
P256 := (a15+a26+a37-a44-a55-a66-a77) * (b41+b44+b52+b55+b63+b66+b77);
P257 := (a14+a15+a36+a37-a54-a55-a76-a77) * (b41+b44+b63+b66);
P258 := (-a26+a44+a66) * (-b42-b45+b52+b55-b67+b77);
P259 := (a15+a37-a55-a77) * (-b41-b44+b51+b54-b63-b66+b73+b76);
P260 := (-a26-a27+a44+a45+a66+a67) * (b52+b55+b77);
P261 := (a14-a26+a36+a44-a54+a66-a76) * (b41+b42+b44+b45+b63+b66+b67);
P262 := (-a15+a27-a37-a45+a55-a67+a77) * (b51+b52+b54+b55+b73+b76+b77);
P263 := (a24+a26+a35+a37-a64-a66-a75-a77) * (b41+b44+b52+b55);
P264 := (a34+a35+a36+a37-a74-a75-a76-a77) * (b41+b44);
P265 := (a24+a26-a64-a66) * (b42+b45-b52-b55);
P266 := (a35+a37-a75-a77) * (-b41-b44+b51+b54);
P267 := (a24+a25+a26+a27-a64-a65-a66-a67) * (b52+b55);
P268 := (-a24-a26+a34+a36+a64+a66-a74-a76) * (b41+b42+b44+b45);
P269 := (a25+a27-a35-a37-a65-a67+a75+a77) * (b51+b52+b54+b55);
P270 := (-a15+a44+a55) * (-b43-b46-b57+b63+b66+b77);
P271 := (a14+a15-a54-a55) * (b43+b46-b63-b66);
P272 := (a15-a55) * (-b43-b46+b53+b56+b63+b66-b73-b76);
P273 := (a15+a45-a55) * (-b53-b56-b57+b73+b76+b77);
P274 := (a26+a37-a66-a77) * (-b41-b44-b52-b55+b61+b64+b72+b75);
P275 := (a36+a37-a76-a77) * (-b41-b44+b61+b64);
P276 := (a26-a66) * (-b42-b45+b52+b55+b62+b65-b72-b75);
P277 := (a37-a77) * (b41+b44-b51-b54-b61-b64+b71+b74);
P278 := (a26+a27-a66-a67) * (-b52-b55+b72+b75);
P279 := (-a26+a36+a66-a76) * (-b41-b42-b44-b45+b61+b62+b64+b65);
P280 := (a27-a37-a67+a77) * (-b51-b52-b54-b55+b71+b72+b74+b75);
P281 := (-a15-a17+a44+a46+a55+a57) * (b63+b66+b77);
P282 := (a14+a15+a16+a17-a54-a55-a56-a57) * (b63+b66);
P283 := (a15+a17-a55-a57) * (-b63-b66+b73+b76);
P284 := (-a14-a16-a44-a46+a54+a56) * (b63+b66+b67);
P285 := (-a15+a24+a35+a44+a55-a64-a75) * (b41+b43+b44+b46+b52+b55+b57);
P286 := (-a14-a15+a34+a35+a54+a55-a74-a75) * (b41+b43+b44+b46);
P287 := (-a15+a35+a55-a75) * (-b41-b43-b44-b46+b51+b53+b54+b56);
P288 := (-a24-a25-a44-a45+a64+a65) * (b52+b55+b57);
P289 := (a15+a25-a35+a45-a55-a65+a75) * (b51+b52+b53+b54+b55+b56+b57);
P290 := (a17-a26-a37-a46-a57+a66+a77) * (b61+b63+b64+b66+b72+b75+b77);
P291 := (a16+a17-a36-a37-a56-a57+a76+a77) * (b61+b63+b64+b66);
P292 := (a26+a46-a66) * (-b62-b65-b67+b72+b75+b77);
P293 := (a17-a37-a57+a77) * (-b61-b63-b64-b66+b71+b73+b74+b76);
P294 := (a16+a26-a36+a46-a56-a66+a76) * (b61+b62+b63+b64+b65+b66+b67);

#  Elements of target matrix C[] as sums of products:
c11 := P02 + P04 + P131 + P133 + P149 + P151 - P156 - P157 + P166 + P168 - P173 - P175 - P192 - P194 + P199 + P200 + P23 - P210 - P212 + P25 + P257 + P259 - P30 + P275 + P277 - P32 - P282 - P283 + P291 + P293 + P44 + P46;
c12 := P01 - P02 + P03 + P06 + P130 - P131 + P132 + P135 + P148 - P149 + P150 + P153 - P155 + P156 + P158 + P165 - P166 + P167 + P170 - P172 + P173 - P174 - P177 - P191 + P192 + P22 - P193 - P196 + P198 - P199 - P23 + P201 - P209 + P24 + P210 - P211 - P213 + P27 - P29 + P256 - P257 + P258 + P30 + P261 + P274 - P275 + P276 + P279 + P281 + P282 + P284 + P290 - P291 + P292 - P34 + P294 + P43 - P44 + P45 + P48;
c13 := P16 + P145 + P146 + P156 + P157 + P18 - P187 - P188 - P199 - P200 + P30 + P271 + P272 + P32 + P282 + P283;
c14 := P91 + P93 + P107 + P109 - P114 - P115 + P124 + P126 + P173 + P175 + P192 + P194 - P199 - P200 + P210 + P212;
c15 :=  - P91 + P92 + P95 + P106 - P107 + P108 + P111 - P113 + P114 - P116 + P123 - P124 + P125 + P128 + P172 - P173 + P174 + P177 + P191 - P192 + P193 + P196 - P198 + P199 - P201 + P209 - P210 + P211 + P213 + P90;
c16 := P104 + P114 + P115 + P187 + P188 + P199 + P200;
c17 :=  - P104 + P105 + P113 - P114 + P116 + P186 - P187 + P189 + P198 - P199 + P201;
c21 := P08 + P11 - P12 + P14 + P137 + P140 - P141 + P143 + P148 + P151 - P152 + P154 - P179 - P182 + P183 - P185 - P191 + P22 - P194 + P195 - P197 + P25 - P26 + P28 + P263 + P266 - P267 + P269 + P274 + P277 - P278 + P280;
c22 := P10 + P12 + P139 + P141 + P150 + P152 - P181 - P183 - P193 - P195 + P24 + P26 + P265 + P267 + P276 + P278;
c23 := P01 + P04 - P05 + P07 - P08 - P11 + P12 - P14 + P130 + P15 + P133 - P134 + P136 - P137 - P140 + P141 - P143 + P144 + P146 + P147 + P18 + P160 + P162 + P163 + P164 - P172 - P175 + P176 - P178 + P179 + P182 - P183 + P21 + P185 - P186 - P188 - P190 - P202 - P205 + P206 - P208 + P256 + P259 + P260 + P262 - P263 - P266 + P267 - P269 + P270 + P272 + P273 + P285 + P287 + P288 + P289 + P36 + P39 - P40 + P42;
c24 := P97 + P100 - P101 + P103 + P106 + P109 - P110 + P112 + P179 + P182 - P183 + P185 + P191 + P194 - P195 + P197;
c25 := P99 + P101 + P108 + P110 + P181 + P183 + P193 + P195;
c26 := P93 - P94 + P96 - P97 - P100 + P101 - P103 + P118 - P121 + P172 + P175 - P176 + P178 - P179 - P182 + P183 - P185 + P186 + P188 + P190 + P202 + P205 - P206 + P208 + P90;
c27 := P92 + P94 - P99 - P101 + P120 + P121 + P174 + P176 - P181 - P183 + P204 + P206;
c31 := P09 + P11 + P138 + P140 + P149 + P151 - P180 - P182 - P192 - P194 + P23 + P25 + P264 + P266 + P275 + P277;
c32 := P08 - P09 + P10 + P13 + P137 - P138 + P139 + P142 + P148 - P149 + P150 + P153 - P179 + P180 - P181 - P184 - P191 + P192 + P22 - P193 - P196 - P23 + P24 + P27 + P263 - P264 + P265 + P268 + P274 - P275 + P276 + P279;
c33 := P02 + P04 - P09 - P11 + P131 + P133 - P138 - P140 + P16 + P145 + P146 + P18 + P161 + P162 - P173 - P175 + P180 + P182 - P187 - P188 - P203 - P205 + P257 + P259 - P264 - P266 + P271 + P272 + P286 + P287 + P37 + P39;
c34 := P98 + P100 + P107 + P109 + P180 + P182 + P192 + P194;
c35 := P97 - P98 + P99 + P102 + P106 - P107 + P108 + P111 + P179 - P180 + P181 + P184 + P191 - P192 + P193 + P196;
c36 := P91 + P93 - P98 - P100 + P104 + P119 + P173 + P175 - P180 - P182 + P187 + P188 + P203 + P205;
c37 :=  - P91 + P92 + P95 - P97 + P98 - P99 - P102 - P104 + P105 + P118 - P119 + P120 + P122 + P172 - P173 + P174 + P177 - P179 + P180 - P181 - P184 + P186 - P187 + P189 + P202 - P203 + P204 + P207 + P90;
c41 := P130 + P133 - P134 + P136 + P148 + P151 - P152 + P154 - P155 - P157 - P159 + P165 + P168 - P169 + P171 + P50 + P53 + P55 + P66 + P69 - P70 + P72 - P73 - P75 - P77 + P83 + P86 - P87 + P89;
c42 := P132 + P134 + P150 + P152 + P167 + P169 + P52 + P68 + P70 + P85 + P87;
c43 := P144 + P146 + P147 + P155 + P157 + P159 + P61 + P63 + P65 + P73 + P75 + P77;
c44 := P01 + P04 - P05 + P07 + P93 - P94 + P96 + P106 + P109 - P110 + P112 - P113 - P115 - P117 + P123 + P126 - P127 + P129 + P22 + P214 + P217 + P25 - P218 + P220 - P26 + P231 + P234 - P235 + P237 - P238 - P241 + P242 + P28 - P244 + P249 - P29 + P252 - P253 + P255 - P32 + P33 - P35 + P43 + P46 - P47 + P49 - P50 - P53 - P55 - P66 - P69 + P70 - P72 + P73 + P75 + P77 - P83 - P86 + P87 - P89 + P90;
c45 := P03 + P05 + P92 + P94 + P108 + P110 + P125 + P127 + P24 + P216 + P218 + P26 + P233 + P235 - P240 - P242 + P251 + P253 - P31 - P33 + P45 + P47 - P52 - P68 - P70 - P85 - P87;
c46 := P113 + P115 + P117 + P15 + P18 - P19 + P21 + P226 - P229 + P238 + P241 - P242 + P244 + P29 + P32 - P33 + P35 - P61 - P63 - P65 - P73 - P75 - P77;
c47 := P17 + P19 + P228 + P229 + P240 + P242 + P31 + P33;
c51 := P131 + P133 + P149 + P151 - P156 - P157 + P166 + P168 + P51 + P53 + P67 + P69 - P74 - P75 + P84 + P86;
c52 := P130 - P131 + P132 + P135 + P148 - P149 + P150 + P153 - P155 + P156 + P158 + P165 - P166 + P167 + P170 + P50 - P51 + P52 + P54 + P66 - P67 + P68 + P71 - P73 + P74 - P76 + P83 - P84 + P85 + P88;
c53 := P145 + P146 + P156 + P157 + P62 + P63 + P74 + P75;
c54 := P02 + P04 + P91 + P93 + P107 + P109 - P114 - P115 + P124 + P126 + P23 + P215 + P217 + P25 + P232 + P234 - P239 - P241 + P250 + P252 - P30 - P32 + P44 + P46 - P51 - P53 - P67 - P69 + P74 + P75 - P84 - P86;
c55 := P01 - P02 + P03 + P06 - P91 + P92 + P95 + P106 - P107 + P108 + P111 - P113 + P114 - P116 + P123 - P124 + P125 + P128 + P22 - P23 + P24 + P214 - P215 + P216 + P219 + P231 - P232 + P233 + P27 + P236 - P238 + P239 - P240 - P243 + P249 - P250 - P29 + P251 + P254 + P30 - P31 - P34 + P43 - P44 + P45 + P48 - P50 + P51 - P52 - P54 - P66 + P67 - P68 - P71 + P73 - P74 + P76 - P83 + P84 - P85 - P88 + P90;
c56 := P104 + P114 + P115 + P16 + P18 + P227 + P239 + P241 + P30 + P32 - P62 - P63 - P74 - P75;
c57 :=  - P104 + P105 + P113 - P114 + P116 + P15 - P16 + P17 + P20 + P226 - P227 + P228 + P230 + P238 - P239 + P240 + P243 + P29 - P30 + P31 + P34 - P61 + P62 + P64 - P73 + P74 - P76;
c61 := P137 + P140 - P141 + P143 + P148 + P151 - P152 + P154 + P56 + P59 + P66 + P69 - P70 + P72;
c62 := P139 + P141 + P150 + P152 + P58 + P68 + P70;
c63 := P130 + P133 - P134 + P136 - P137 - P140 + P141 - P143 + P144 + P146 + P147 + P160 + P162 + P163 + P164 + P50 + P53 + P55 - P56 - P59 + P61 + P63 + P65 + P78 + P81;
c64 := P08 + P97 + P100 + P11 - P101 + P103 - P12 + P106 + P109 - P110 + P112 + P14 + P22 + P25 + P221 + P224 - P26 + P231 + P234 - P235 + P237 + P28 - P56 - P59 - P66 - P69 + P70 - P72;
c65 := P10 + P99 + P101 + P12 + P108 + P110 + P24 + P223 + P26 + P233 + P235 - P58 - P68 - P70;
c66 := P01 + P04 - P05 + P07 - P08 + P93 - P94 + P96 - P97 - P100 - P11 + P101 - P103 + P12 + P118 - P121 - P14 + P15 + P18 - P19 + P21 + P214 + P217 - P218 + P220 - P221 - P224 + P226 - P229 + P245 + P36 + P39 - P40 + P42 - P50 - P53 - P55 + P56 + P59 - P61 - P63 - P65 - P78 - P81 + P90;
c67 := P03 + P05 - P10 + P92 + P94 - P99 - P101 - P12 + P120 + P121 + P17 + P19 + P216 + P218 - P223 + P228 + P229 + P247 + P38 + P40 - P52 + P58 + P80;
c71 := P138 + P140 + P149 + P151 + P57 + P59 + P67 + P69;
c72 := P137 - P138 + P139 + P142 + P148 - P149 + P150 + P153 + P56 - P57 + P58 + P60 + P66 - P67 + P68 + P71;
c73 := P131 + P133 - P138 - P140 + P145 + P146 + P161 + P162 + P51 + P53 - P57 - P59 + P62 + P63 + P79 + P81;
c74 := P09 + P98 + P100 + P11 + P107 + P109 + P23 + P25 + P222 + P224 + P232 + P234 - P57 - P59 - P67 - P69;
c75 := P08 - P09 + P10 + P97 - P98 + P99 + P102 + P106 - P107 + P108 + P111 + P13 + P22 - P23 + P24 + P221 - P222 + P223 + P225 + P231 - P232 + P233 + P27 + P236 - P56 + P57 - P58 - P60 - P66 + P67 - P68 - P71;
c76 := P02 + P04 - P09 + P91 + P93 - P98 - P100 - P11 + P104 + P119 + P16 + P18 + P215 + P217 - P222 - P224 + P227 + P246 + P37 + P39 - P51 - P53 + P57 + P59 - P62 - P63 - P79 - P81;
c77 := P01 - P02 + P03 + P06 - P08 + P09 - P10 - P91 + P92 + P95 - P97 + P98 - P99 - P102 - P104 + P105 - P13 + P118 - P119 + P120 + P122 + P15 - P16 + P17 + P20 + P214 - P215 + P216 + P219 - P221 + P222 - P223 - P225 + P226 - P227 + P228 + P230 + P245 - P246 + P247 + P248 + P36 - P37 + P38 + P41 - P50 + P51 - P52 - P54 + P56 - P57 + P58 + P60 - P61 + P62 + P64 - P78 + P79 + P80 + P82 + P90;

#  Yacas validation expressions should result in 0:
Simplify(c11 - (a11*b11+a12*b21+a13*b31+a14*b41+a15*b51+a16*b61+a17*b71));
Simplify(c12 - (a11*b12+a12*b22+a13*b32+a14*b42+a15*b52+a16*b62+a17*b72));
Simplify(c13 - (a11*b13+a12*b23+a13*b33+a14*b43+a15*b53+a16*b63+a17*b73));
Simplify(c14 - (a11*b14+a12*b24+a13*b34+a14*b44+a15*b54+a16*b64+a17*b74));
Simplify(c15 - (a11*b15+a12*b25+a13*b35+a14*b45+a15*b55+a16*b65+a17*b75));
Simplify(c16 - (a11*b16+a12*b26+a13*b36+a14*b46+a15*b56+a16*b66+a17*b76));
Simplify(c17 - (a11*b17+a12*b27+a13*b37+a14*b47+a15*b57+a16*b67+a17*b77));
Simplify(c21 - (a21*b11+a22*b21+a23*b31+a24*b41+a25*b51+a26*b61+a27*b71));
Simplify(c22 - (a21*b12+a22*b22+a23*b32+a24*b42+a25*b52+a26*b62+a27*b72));
Simplify(c23 - (a21*b13+a22*b23+a23*b33+a24*b43+a25*b53+a26*b63+a27*b73));
Simplify(c24 - (a21*b14+a22*b24+a23*b34+a24*b44+a25*b54+a26*b64+a27*b74));
Simplify(c25 - (a21*b15+a22*b25+a23*b35+a24*b45+a25*b55+a26*b65+a27*b75));
Simplify(c26 - (a21*b16+a22*b26+a23*b36+a24*b46+a25*b56+a26*b66+a27*b76));
Simplify(c27 - (a21*b17+a22*b27+a23*b37+a24*b47+a25*b57+a26*b67+a27*b77));
Simplify(c31 - (a31*b11+a32*b21+a33*b31+a34*b41+a35*b51+a36*b61+a37*b71));
Simplify(c32 - (a31*b12+a32*b22+a33*b32+a34*b42+a35*b52+a36*b62+a37*b72));
Simplify(c33 - (a31*b13+a32*b23+a33*b33+a34*b43+a35*b53+a36*b63+a37*b73));
Simplify(c34 - (a31*b14+a32*b24+a33*b34+a34*b44+a35*b54+a36*b64+a37*b74));
Simplify(c35 - (a31*b15+a32*b25+a33*b35+a34*b45+a35*b55+a36*b65+a37*b75));
Simplify(c36 - (a31*b16+a32*b26+a33*b36+a34*b46+a35*b56+a36*b66+a37*b76));
Simplify(c37 - (a31*b17+a32*b27+a33*b37+a34*b47+a35*b57+a36*b67+a37*b77));
Simplify(c41 - (a41*b11+a42*b21+a43*b31+a44*b41+a45*b51+a46*b61+a47*b71));
Simplify(c42 - (a41*b12+a42*b22+a43*b32+a44*b42+a45*b52+a46*b62+a47*b72));
Simplify(c43 - (a41*b13+a42*b23+a43*b33+a44*b43+a45*b53+a46*b63+a47*b73));
Simplify(c44 - (a41*b14+a42*b24+a43*b34+a44*b44+a45*b54+a46*b64+a47*b74));
Simplify(c45 - (a41*b15+a42*b25+a43*b35+a44*b45+a45*b55+a46*b65+a47*b75));
Simplify(c46 - (a41*b16+a42*b26+a43*b36+a44*b46+a45*b56+a46*b66+a47*b76));
Simplify(c47 - (a41*b17+a42*b27+a43*b37+a44*b47+a45*b57+a46*b67+a47*b77));
Simplify(c51 - (a51*b11+a52*b21+a53*b31+a54*b41+a55*b51+a56*b61+a57*b71));
Simplify(c52 - (a51*b12+a52*b22+a53*b32+a54*b42+a55*b52+a56*b62+a57*b72));
Simplify(c53 - (a51*b13+a52*b23+a53*b33+a54*b43+a55*b53+a56*b63+a57*b73));
Simplify(c54 - (a51*b14+a52*b24+a53*b34+a54*b44+a55*b54+a56*b64+a57*b74));
Simplify(c55 - (a51*b15+a52*b25+a53*b35+a54*b45+a55*b55+a56*b65+a57*b75));
Simplify(c56 - (a51*b16+a52*b26+a53*b36+a54*b46+a55*b56+a56*b66+a57*b76));
Simplify(c57 - (a51*b17+a52*b27+a53*b37+a54*b47+a55*b57+a56*b67+a57*b77));
Simplify(c61 - (a61*b11+a62*b21+a63*b31+a64*b41+a65*b51+a66*b61+a67*b71));
Simplify(c62 - (a61*b12+a62*b22+a63*b32+a64*b42+a65*b52+a66*b62+a67*b72));
Simplify(c63 - (a61*b13+a62*b23+a63*b33+a64*b43+a65*b53+a66*b63+a67*b73));
Simplify(c64 - (a61*b14+a62*b24+a63*b34+a64*b44+a65*b54+a66*b64+a67*b74));
Simplify(c65 - (a61*b15+a62*b25+a63*b35+a64*b45+a65*b55+a66*b65+a67*b75));
Simplify(c66 - (a61*b16+a62*b26+a63*b36+a64*b46+a65*b56+a66*b66+a67*b76));
Simplify(c67 - (a61*b17+a62*b27+a63*b37+a64*b47+a65*b57+a66*b67+a67*b77));
Simplify(c71 - (a71*b11+a72*b21+a73*b31+a74*b41+a75*b51+a76*b61+a77*b71));
Simplify(c72 - (a71*b12+a72*b22+a73*b32+a74*b42+a75*b52+a76*b62+a77*b72));
Simplify(c73 - (a71*b13+a72*b23+a73*b33+a74*b43+a75*b53+a76*b63+a77*b73));
Simplify(c74 - (a71*b14+a72*b24+a73*b34+a74*b44+a75*b54+a76*b64+a77*b74));
Simplify(c75 - (a71*b15+a72*b25+a73*b35+a74*b45+a75*b55+a76*b65+a77*b75));
Simplify(c76 - (a71*b16+a72*b26+a73*b36+a74*b46+a75*b56+a76*b66+a77*b76));
Simplify(c77 - (a71*b17+a72*b27+a73*b37+a74*b47+a75*b57+a76*b67+a77*b77));

#  End of file 7x7.Strassen.extracted.txt

